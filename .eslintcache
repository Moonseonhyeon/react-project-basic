[{"C:\\src\\reactprojects\\react-basic\\basic-project\\src\\app.jsx":"1","C:\\src\\reactprojects\\react-basic\\habit-tracker\\src\\app.jsx":"2","C:\\src\\reactprojects\\react-basic\\habit-tracker\\src\\components\\habit.jsx":"3","C:\\src\\reactprojects\\react-basic\\habit-tracker\\src\\index.js":"4","C:\\src\\reactprojects\\react-basic\\habit-tracker\\src\\components\\habits.jsx":"5","C:\\src\\reactprojects\\react-basic\\habit-tracker\\src\\components\\add.jsx":"6","C:\\src\\reactprojects\\react-basic\\habit-tracker\\src\\components\\nav.jsx":"7","C:\\src\\reactprojects\\react-basic\\habit-tracker\\src\\components\\simpleHabit.jsx":"8"},{"size":100,"mtime":1606634376658,"results":"9","hashOfConfig":"10"},{"size":1732,"mtime":1607877802709,"results":"11","hashOfConfig":"12"},{"size":1833,"mtime":1608043200861,"results":"13","hashOfConfig":"12"},{"size":321,"mtime":1608392212474,"results":"14","hashOfConfig":"12"},{"size":1602,"mtime":1607874901872,"results":"15","hashOfConfig":"12"},{"size":2172,"mtime":1608218386660,"results":"16","hashOfConfig":"12"},{"size":408,"mtime":1607877833703,"results":"17","hashOfConfig":"12"},{"size":2442,"mtime":1608386833024,"results":"18","hashOfConfig":"12"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e1zeda",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"xt6vda",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"C:\\src\\reactprojects\\react-basic\\basic-project\\src\\app.jsx",[],"C:\\src\\reactprojects\\react-basic\\habit-tracker\\src\\app.jsx",["38"],"import './app.css';\nimport Habits from './components/habits';\nimport Nav from './components/nav';\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  state = {\n    habits :[\n        {id: 1, name:'Reading', count: 0},\n        {id: 2, name:'Running', count: 0},\n        {id: 3, name:'Coding', count: 0},\n    ],\n};\n\nhandleIncrement = habit => {\n  const habits = this.state.habits.map(item => {\n    if(item.id === habit.id) {\n      return {...habit, count: habit.count+1 };\n    }\n      return item;\n    });\n    this.setState({habits});\n  };\n\nhandleDecrement = habit => {\n  const habits = this.state.habits.map(item => {\n    if(item.id ===habit.id){\n      const count = habit.count -1;\n      return {...habit, count : count < 0 ? 0 : count};\n    }\n      return item;\n  });\n   this.setState({habits});\n};\n\nhandleDelete = habit => {\n   const habits = this.state.habits.filter(item => item.id !== habit.id);\n   const index = habits.indexOf(habit);\n   this.setState({habits});\n};\n\nhandleAdd = name => {\n  const habits = [...this.state.habits,{id: Date.now(), name: name, count: 0}];\n  this.setState({habits});\n};\n\nhandleReset = () => {\n  const habits = this.state.habits.map(habit => {\n    if(habit.count !== 0){\n      return {...habit, count : 0};\n    }\n      return habit;\n    });\n  this.setState({habits});\n};\n\n  render() {\n    return <>\n      <Nav\n        totalCount={this.state.habits.filter(item => item.count > 0).length} /> \n      <Habits \n        habits = {this.state.habits} \n        onAdd={this.handleAdd}\n        onIncrement={this.handleIncrement}\n        onDecrement={this.handleDecrement}\n        onDelete={this.handleDelete}\n        onReset={this.handleReset}\n      />\n    </>\n  }\n}\n\nexport default App;","C:\\src\\reactprojects\\react-basic\\habit-tracker\\src\\components\\habit.jsx",[],"C:\\src\\reactprojects\\react-basic\\habit-tracker\\src\\index.js",["39"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport SimpleHabit from './components/simpleHabit';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","C:\\src\\reactprojects\\react-basic\\habit-tracker\\src\\components\\habits.jsx",[],"C:\\src\\reactprojects\\react-basic\\habit-tracker\\src\\components\\add.jsx",[],"C:\\src\\reactprojects\\react-basic\\habit-tracker\\src\\components\\nav.jsx",[],"C:\\src\\reactprojects\\react-basic\\habit-tracker\\src\\components\\simpleHabit.jsx",["40"],"import React, { useState, useRef, useCallback, useEffect } from 'react';\r\n//useEffect는 componentDidMount와 componentDidUpdate를 합친거다.\r\nconst SimpleHabit = props => {\r\n    //state={\r\n    //  count : 0,\r\n    //};     \r\n    const [count, setCount] = useState(0);\r\n//count, setCount 이렇게 두가지를 선언해 놓으면 useState()함수를 호출하면 리액트에서 두가지를 return해 줍니다.\r\n//실제의 count값과 count를 업데이트 할 수있는 setCount함수를 제공해 줍니다.\r\n   \r\nconst spanRef = useRef(); //React.createRef(); \r\n    //함수형 컴포넌트를 호출할 때마다 새로운 레퍼런트를 만드는 것이 아니라 한번만 만들고 메모리에 저장해 놓고 다시 그것을 재사용합니다.\r\n  \r\n    // handleIncrement = () => {\r\n   //     this.setState({count : this.count + 1 });\r\n   // };\r\n    const handleIncrement = useCallback(() => {\r\n        setCount(count + 1);\r\n    });\r\n    //함수형컴포넌트가 호출될 때마다 이 콜백함수도 매번 호출되어 생성되어 아래 onClick에 새로운 것이 할당됨.\r\n    //그래서 memo를 사용해도 props자체가 즉 함수자체가 변경이 되기 때문에 계속 업데이트가 되는 side effect가 있어요.\r\n    //그래서 이것을 방지하고자 userCallback을 사용하면 리액트가 cash를 하기 때문에 handelIncrement 함수를 반복해서 호출이 되어도 동일한 콜백함수를 전달해준다.\r\n\r\n    useEffect(()=>{console.log(`mounted and updated : ${count}`);}, [count]);\r\n    //두번 째 인자에 []안에 적어준 것만이 변경되었을 때만 호출한다.\r\n    //두번 쩨 인자, []안에 아무것도 안적으면 mount되 때만 호출한다. 데이터가 변경되어도 호출안됨.\r\n    \r\n    return (\r\n        <li className=\"habit\">\r\n          <span ref={spanRef} className=\"habit-name\">\r\n            Reading\r\n          </span>\r\n          <span className=\"habit-count\">{count}</span>\r\n          <button className=\"habit-button habit-increase\" onClick={handleIncrement}>\r\n            <i className=\"fas fa-plus-square\"></i>\r\n          </button>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default SimpleHabit;\r\n\r\n//class는 한번 만들어지면 안에 맴버변수들 딱 한번만 만들어지고 업데이트 되면 render 함수호출.\r\n//함수형은 props나 state 변경되면 전부 반복해서  지역변수, 함수들 다 무한정 반복.",{"ruleId":"41","severity":1,"message":"42","line":38,"column":10,"nodeType":"43","messageId":"44","endLine":38,"endColumn":15},{"ruleId":"41","severity":1,"message":"45","line":6,"column":8,"nodeType":"43","messageId":"44","endLine":6,"endColumn":19},{"ruleId":"46","severity":1,"message":"47","line":17,"column":29,"nodeType":"43","endLine":17,"endColumn":40},"no-unused-vars","'index' is assigned a value but never used.","Identifier","unusedVar","'SimpleHabit' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?"]