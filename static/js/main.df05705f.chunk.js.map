{"version":3,"sources":["components/add.jsx","components/habit.jsx","components/habits.jsx","components/nav.jsx","app.jsx","index.js"],"names":["Add","memo","props","formRef","React","createRef","inputRef","ref","className","onSubmit","event","console","log","current","value","preventDefault","name","onAdd","reset","type","placeholder","Habit","handleIncrement","onIncrement","habit","handleDecrement","onDecrement","handleDelete","onDelete","this","count","onClick","PureComponent","Habits","index","habits","indexOf","handleAdd","map","id","onReset","Component","Nav","totalCount","App","state","item","setState","filter","Date","now","handleReset","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df05705f.chunk.js","sourcesContent":["/* PureComponent를 상속해서 컴포넌트를 만들면 그냥 컴포넌트와 달리\r\nshouldComponentUpdate()함수로 state나 props에 데이터가 변경되었는지 가벼운 비교를 해서 ture/false를 return합니다.\r\ntrue면 render함수를 호출하고 false는 안합니다. */\r\n\r\nimport React, { memo } from 'react';\r\n//memo 자동완성하면 import 자동으로 됨.\r\n//state가 따로 없다면 함수형컴포넌트 rsi 자동완성!\r\nconst Add = memo(props => {\r\n    /* memo함수안에 안에 우리 fuction컴포넌트를 전달해서 memo는 \r\n    class형 컴포넌트에서 PureComponent에서 처럼 props가 변경되지 않으면 안에 있는 함수가 호출되지 않습니다. */\r\n\r\n    //함수니까 지역변수로 선언\r\n    const formRef = React.createRef();\r\n    const inputRef = React.createRef(); \r\n    /* 이렇게 맴버변수를 createRef()로 정의하면 Ref라는 오브젝트가 생김.\r\n    돔에 직접 접근하지않고 우리가 원하는 해당하는 컴포포넌트에 ref에 값으로 연결해주면 됩니다.*/\r\n    \r\n    \r\n    const onSubmit = event => {\r\n        //함수안에서는 this로 접근 안해도 된다.\r\n        console.log(inputRef.current.value);\r\n    \r\n        /*submit이 발생하게 되면 페이지가 리프레시가 되거나 다른 페이지로 가는 걸 예상하고 있어요.\r\n        그래서 preventDefault()라는 브라우저의 기본 기능을 취소를 해 줍니다.\r\n        그럼 더이상 리프레시가 일어나지 않는 것을 볼 수가 있어요. */\r\n        event.preventDefault();\r\n    \r\n        const name = inputRef.current.value;\r\n        name && props.onAdd(name);\r\n        console.log('submit!');\r\n        /*Add버튼 누르고 나면 input 값이 초기화되도록 하기*/\r\n        //this.inputRef.current.value = '';\r\n        formRef.current.reset();\r\n    };\r\n\r\n    return (\r\n        <form ref={formRef} className=\"add-form\" onSubmit={onSubmit}>\r\n            <input ref={inputRef} type=\"text\" className=\"add-input\" placeholder = \"Habit\"/>\r\n            <button className=\"add-button\">Add</button>\r\n        </form>\r\n    );\r\n});\r\n\r\nexport default Add;","import React, { PureComponent } from 'react';\r\n\r\nclass Habit extends PureComponent {\r\n    //컴포넌트가 ui상에 등록이 되었을 때(화면에 보여질 때) 이 함수를 이렇게 해놓으면 리액트가 알아서 생면주기에 맞게 호출해줍니다.\r\n    componentDidMount () {\r\n        console.log(`${this.props.habit.name} mounted.`);\r\n        //데이터를 가져오는 작업 등\r\n    }\r\n\r\n    //컴포넌트가 언마운트 될 때(우리가 지우기 전) 이 함수를 이렇게 해놓으면 리액트가 알아서 생면주기에 맞게 호출해줍니다.\r\n    componentWillUnmount () {\r\n        console.log(`${this.props.habit.name} will unmount.`);\r\n        //소켓이라면 마치기전에 resource를 다 지우거나 하는 작업 등..\r\n    }\r\n\r\n    handleIncrement = () => {\r\n        this.props.onIncrement(this.props.habit);\r\n     }\r\n \r\n    handleDecrement = () => {\r\n        this.props.onDecrement(this.props.habit);\r\n    }\r\n\r\n    handleDelete = () => {\r\n        this.props.onDelete(this.props.habit);\r\n    }\r\n\r\n\r\n    render() {        \r\n        const {name, count} = this.props.habit;\r\n        return <li className=\"habit\">\r\n            <span className=\"habit-name\">{name}</span>\r\n            <span className=\"habit-count\">{count}</span>\r\n            <button className=\"habit-button habit-increase\" onClick={this.handleIncrement}>\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <button className=\"habit-button habit-decrease\" onClick={this.handleDecrement}>\r\n                <i className=\"fas fa-minus-square\"></i>\r\n            </button>\r\n            <button className=\"habit-button habit-delete\" onClick={this.handleDelete}>\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </li>\r\n    }\r\n}\r\n\r\nexport default Habit;","import React, { Component } from 'react';\r\nimport Add from './add';\r\nimport Habit from './habit';\r\n\r\nclass Habits extends Component {\r\n    handleIncrement = habit => {\r\n        const habits = [...this.props.habits];\r\n        const index = habits.indexOf(habit);\r\n        console.log(this.props.habits[index]);\r\n        this.props.onIncrement(this.props.habits[index]);\r\n    }\r\n \r\n    handleDecrement = habit => {\r\n    const habits = [...this.props.habits];\r\n    const index = habits.indexOf(habit);\r\n        this.props.onDecrement(this.props.habits[index]);\r\n    }\r\n\r\n    handleDelete = habit => {\r\n    const habits = [...this.props.habits];\r\n    const index = habits.indexOf(habit);\r\n        this.props.onDelete(this.props.habits[index]);\r\n    }\r\n\r\n    handleAdd = name => {\r\n        this.props.onAdd(name);\r\n    }\r\n\r\n    render() {\r\n        return <div> { /*Add PureComponent를 ㄴ위해서 Fragment tag -> <div>로 수정 */}\r\n                <Add onAdd={this.handleAdd}></Add>\r\n                <ul>\r\n                    {this.props.habits.map(habit => (\r\n                        <Habit \r\n                            key = {habit.id} \r\n                            habit = {habit} \r\n                            onIncrement={this.handleIncrement}\r\n                            onDecrement={this.handleDecrement}\r\n                            onDelete={this.handleDelete}\r\n                        />\r\n                    ))}\r\n                </ul>\r\n                <button className=\"habits-reset\" onClick = {this.props.onReset}>Reset All</button>\r\n            </div>\r\n    }\r\n}\r\n\r\nexport default Habits;","import React, { PureComponent } from 'react';\r\n\r\nclass Nav extends PureComponent {\r\n    render() {\r\n        return (\r\n            <header className=\"navbar\">\r\n                <i className=\"navbar-logo fas fa-leaf\"></i>\r\n                <span>Habit Tacker</span>\r\n                <span className=\"navbar-count\">{this.props.totalCount}</span>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nav;","import './app.css';\nimport Habits from './components/habits';\nimport Nav from './components/nav';\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  state = {\n    habits :[\n        {id: 1, name:'Reading', count: 0},\n        {id: 2, name:'Running', count: 0},\n        {id: 3, name:'Coding', count: 0},\n    ],\n};\n\nhandleIncrement = habit => {\n  const habits = this.state.habits.map(item => {\n    if(item.id === habit.id) {\n      return {...habit, count: habit.count+1 };\n    }\n      return item;\n    });\n    this.setState({habits});\n  };\n\nhandleDecrement = habit => {\n  const habits = this.state.habits.map(item => {\n    if(item.id ===habit.id){\n      const count = habit.count -1;\n      return {...habit, count : count < 0 ? 0 : count};\n    }\n      return item;\n  });\n   this.setState({habits});\n};\n\nhandleDelete = habit => {\n   const habits = this.state.habits.filter(item => item.id !== habit.id);\n   const index = habits.indexOf(habit);\n   this.setState({habits});\n};\n\nhandleAdd = name => {\n  const habits = [...this.state.habits,{id: Date.now(), name: name, count: 0}];\n  this.setState({habits});\n};\n\nhandleReset = () => {\n  const habits = this.state.habits.map(habit => {\n    if(habit.count !== 0){\n      return {...habit, count : 0};\n    }\n      return habit;\n    });\n  this.setState({habits});\n};\n\n  render() {\n    return <>\n      <Nav\n        totalCount={this.state.habits.filter(item => item.count > 0).length} /> \n      <Habits \n        habits = {this.state.habits} \n        onAdd={this.handleAdd}\n        onIncrement={this.handleIncrement}\n        onDecrement={this.handleDecrement}\n        onDelete={this.handleDelete}\n        onReset={this.handleReset}\n      />\n    </>\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport SimpleHabit from './components/simpleHabit';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}